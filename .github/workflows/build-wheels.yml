name: Build and Release dlib Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13, 3.14]
        architecture: [x86_64, aarch64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake libboost-all-dev libopenblas-dev liblapack-dev \
            libx11-dev libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev \
            libv4l-dev libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
            libatlas-base-dev gfortran wget curl git

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools build

      - name: Cache pip and dlib build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            dlib/build/
          key: ${{ runner.os }}-dlib-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('**/setup.py', '**/pyproject.toml') }}

      - name: Clone dlib
        run: |
          git clone https://github.com/davisking/dlib.git dlib_src
          cd dlib_src
          git checkout v19.24

      - name: Build wheel
        run: |
          cd dlib_src
          python setup.py bdist_wheel --plat-name linux_${{ matrix.architecture }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dlib-${{ matrix.python-version }}-linux-${{ matrix.architecture }}
          path: dlib_src/dist/*.whl
          retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Pre-built dlib wheels for Linux (x86_64 and aarch64) on Python 3.7 â†’ 3.14.

            ## Installation
            Download the wheel matching your Python version and architecture from this release and install via:
            ```bash
            pip install dlib-*-linux-*.whl
            ```

          draft: false
          prerelease: false

      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: wheels/

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: wheels/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
